// Blockly version: 4.20210302.0.cyb3rblockly
// Automatically generated. Do not edit this file.
'use strict';


var WorkspaceFactoryController=WorkspaceFactoryController||Object.create(null);WorkspaceFactoryController=function(a,b,c){this.toolbox=a;this.toolboxWorkspace=b;this.previewWorkspace=c;this.model=new WorkspaceFactoryModel;this.view=new WorkspaceFactoryView;this.generator=new WorkspaceFactoryGenerator(this.model);this.selectedMode=WorkspaceFactoryController.MODE_TOOLBOX;this.keyEventsEnabled=!0;this.hasUnsavedPreloadChanges=this.hasUnsavedToolboxChanges=!1};
WorkspaceFactoryController.MODE_TOOLBOX="toolbox";WorkspaceFactoryController.MODE_PRELOAD="preload";WorkspaceFactoryController.prototype.addCategory=function(){this.transferFlyoutBlocksToCategory();var a=!this.model.hasElements(),b=this.promptForNewCategoryName("Enter the name of your new category:");b&&(this.createCategory(b),this.switchElement(this.model.getCategoryIdByName(b)),a&&(this.view.setCategoryOptions(this.model.hasElements()),this.generateNewOptions()),this.updatePreview())};
WorkspaceFactoryController.prototype.createCategory=function(a){var b=new ListElement(ListElement.TYPE_CATEGORY,a);this.model.addElementToList(b);a=this.view.addCategoryRow(a,b.id);this.addClickToSwitch(a,b.id)};WorkspaceFactoryController.prototype.addClickToSwitch=function(a,b){var c=this;this.view.bindClick(a,function(d){return function(){c.switchElement(d)}}(b))};
WorkspaceFactoryController.prototype.transferFlyoutBlocksToCategory=function(){if(!this.model.hasElements()&&0<this.toolboxWorkspace.getAllBlocks(!1).length){this.createCategory("Category 1",!0);var a=this.model.getCategoryIdByName("Category 1");this.model.setSelectedById(a);this.view.setCategoryTabSelection(a,!0);this.view.setCategoryOptions(this.model.hasElements());this.generateNewOptions();this.updatePreview()}};
WorkspaceFactoryController.prototype.removeElement=function(){if(this.model.getSelected()&&confirm("Are you sure you want to delete the currently selected "+this.model.getSelected().type+"?")){var a=this.model.getSelectedId(),b=this.model.getIndexByElementId(a);this.view.deleteElementRow(a,b);this.model.deleteElementFromList(b);a=this.model.getElementByIndex(b);!a&&this.model.hasElements()&&(a=this.model.getElementByIndex(b-1));b=a?a.id:null;this.clearAndLoadElement(b);b||(alert("You currently have no categories or separators. All your blocks will be displayed in a single flyout."),
this.toolboxWorkspace.clear(),this.toolboxWorkspace.clearUndo(),this.model.createDefaultSelectedIfEmpty());this.updatePreview()}};WorkspaceFactoryController.prototype.promptForNewCategoryName=function(a,b){var c=b;do{var d=prompt(a,c);if(!d)return null;c=d}while(this.model.hasCategoryByName(d));return d};
WorkspaceFactoryController.prototype.switchElement=function(a){Blockly.Events.disable();null!=this.model.getSelectedId()&&null!=a&&this.model.getSelected().saveFromWorkspace(this.toolboxWorkspace);this.clearAndLoadElement(a);Blockly.Events.enable()};
WorkspaceFactoryController.prototype.clearAndLoadElement=function(a){null!=this.model.getSelectedId()&&null!=a&&this.view.setCategoryTabSelection(this.model.getSelectedId(),!1);null!=a?(this.model.setSelectedById(a),this.clearAndLoadXml_(this.model.getSelectedXml()),this.view.setCategoryTabSelection(a,!0),this.toolboxWorkspace.cleanUp(),this.view.updateState(this.model.getIndexByElementId(this.model.getSelectedId()),this.model.getSelected())):this.view.updateState(-1,null)};
WorkspaceFactoryController.prototype.exportXmlFile=function(a){var b=a==WorkspaceFactoryController.MODE_TOOLBOX?prompt("File Name for toolbox XML:","toolbox.xml"):prompt("File Name for pre-loaded workspace XML:","workspace.xml");if(b){if(a==WorkspaceFactoryController.MODE_TOOLBOX)a=Blockly.Xml.domToPrettyText(this.generator.generateToolboxXml()),this.hasUnsavedToolboxChanges=!1;else if(a==WorkspaceFactoryController.MODE_PRELOAD)a=Blockly.Xml.domToPrettyText(this.generator.generateWorkspaceXml()),
this.hasUnsavedPreloadChanges=!1;else throw Error("Unknown export mode: "+a);a=new Blob([a],{type:"text/xml"});this.view.createAndDownloadFile(b,a)}};WorkspaceFactoryController.prototype.exportInjectFile=function(){var a=prompt("File Name for starter Blockly workspace code:","workspace.js");if(a){this.generateNewOptions();var b=this.generator.generateInjectString();b=new Blob([b],{type:"text/javascript"});this.view.createAndDownloadFile(a,b)}};
WorkspaceFactoryController.prototype.printConfig=function(){this.saveStateFromWorkspace();console.log(Blockly.Xml.domToPrettyText(this.generator.generateToolboxXml()))};
WorkspaceFactoryController.prototype.updatePreview=function(){Blockly.Events.disable();if(!this.model.options.readOnly){var a=Blockly.utils.toolbox.parseToolboxTree(this.generator.generateToolboxXml());0==a.getElementsByTagName("category").length?this.previewWorkspace.toolbox_?this.reinjectPreview(a):this.previewWorkspace.updateToolbox(a):this.previewWorkspace.toolbox_?(this.previewWorkspace.toolbox_.clearSelection(),this.previewWorkspace.updateToolbox(a)):this.reinjectPreview(a)}this.previewWorkspace.clear();
Blockly.Xml.domToWorkspace(this.generator.generateWorkspaceXml(),this.previewWorkspace);Blockly.Events.enable()};
WorkspaceFactoryController.prototype.saveStateFromWorkspace=function(){this.selectedMode==WorkspaceFactoryController.MODE_TOOLBOX?(this.model.getSelectedXml()!=Blockly.Xml.workspaceToDom(this.toolboxWorkspace)&&(this.hasUnsavedToolboxChanges=!0),this.model.getSelected().saveFromWorkspace(this.toolboxWorkspace)):this.selectedMode==WorkspaceFactoryController.MODE_PRELOAD&&(this.model.getPreloadXml()!=Blockly.Xml.workspaceToDom(this.toolboxWorkspace)&&(this.hasUnsavedPreloadChanges=!0),this.model.savePreloadXml(Blockly.Xml.workspaceToDom(this.toolboxWorkspace)))};
WorkspaceFactoryController.prototype.reinjectPreview=function(a){this.previewWorkspace.dispose();var b=this.readOptions_();b.toolbox=Blockly.Xml.domToPrettyText(a);this.previewWorkspace=Blockly.inject("preview_blocks",b);Blockly.Xml.domToWorkspace(this.generator.generateWorkspaceXml(),this.previewWorkspace)};
WorkspaceFactoryController.prototype.changeSelectedCategory=function(a,b){var c=this.model.getSelected();c.type==ListElement.TYPE_CATEGORY&&(c.changeColor(b),this.view.setBorderColor(this.model.getSelectedId(),b),c.changeName(a),this.view.updateCategoryName(a,this.model.getSelectedId()),this.updatePreview())};
WorkspaceFactoryController.prototype.moveElement=function(a){var b=this.model.getSelected();if(b){var c=this.model.getIndexByElementId(b.id);a=this.model.getIndexByElementId(b.id)+a;this.model.getElementByIndex(a)&&(this.moveElementToIndex(b,a,c),this.view.updateState(a,this.model.getSelected()),this.updatePreview())}};WorkspaceFactoryController.prototype.moveElementToIndex=function(a,b,c){this.model.moveElementToIndex(a,b,c);this.view.moveTabToIndex(a.id,b,c)};
WorkspaceFactoryController.prototype.loadCategory=function(){do{var a=prompt("Enter the name of the category you would like to import (Logic, Loops, Math, Text, Lists, Colour, Variables, TypedVariables or Functions)");if(!a)return}while(!this.isStandardCategoryName(a));this.loadCategoryByName(a)};
WorkspaceFactoryController.prototype.loadCategoryByName=function(a){if(this.isStandardCategoryName(a))if(this.model.hasVariables()&&"variables"==a.toLowerCase())alert("A Variables category already exists. You cannot create multiple variables categories.");else if(this.model.hasProcedures()&&"functions"==a.toLowerCase())alert("A Functions category already exists. You cannot create multiple functions categories.");else{var b=StandardCategories.categoryMap[a.toLowerCase()];if(this.model.hasCategoryByName(b.name))alert("You already have a category with the name "+
b.name+". Rename your category and try again.");else{b.color||void 0===b.hue||(b.color=Blockly.hueToHex(b.hue));this.transferFlyoutBlocksToCategory();a=!this.model.hasElements();b=b.copy();this.model.addElementToList(b);var c=this.view.addCategoryRow(b.name,b.id);this.addClickToSwitch(c,b.id);b.color&&this.view.setBorderColor(b.id,b.color);this.switchElement(b.id);this.convertShadowBlocks();this.saveStateFromWorkspace();a&&(this.view.setCategoryOptions(this.model.hasElements()),this.generateNewOptions());
this.updatePreview()}}};WorkspaceFactoryController.prototype.loadStandardToolbox=function(){this.loadCategoryByName("Logic");this.loadCategoryByName("Loops");this.loadCategoryByName("Math");this.loadCategoryByName("Text");this.loadCategoryByName("Lists");this.loadCategoryByName("Colour");this.addSeparator();this.loadCategoryByName("Variables");this.loadCategoryByName("Functions")};WorkspaceFactoryController.prototype.isStandardCategoryName=function(a){return!!StandardCategories.categoryMap[a.toLowerCase()]};
WorkspaceFactoryController.prototype.addSeparator=function(){this.transferFlyoutBlocksToCategory();var a=new ListElement(ListElement.TYPE_SEPARATOR);this.model.addElementToList(a);var b=this.view.addSeparatorTab(a.id);this.addClickToSwitch(b,a.id);this.switchElement(a.id);this.updatePreview()};
WorkspaceFactoryController.prototype.importFile=function(a,b){if(a){Blockly.Events.disable();var c=this,d=new FileReader;d.onload=function(){try{var e=Blockly.Xml.textToDom(d.result);if(b==WorkspaceFactoryController.MODE_TOOLBOX){c.setMode(WorkspaceFactoryController.MODE_TOOLBOX);if(c.model.hasElements()||0<c.toolboxWorkspace.getAllBlocks(!1).length){var f=confirm();if(!f)return}c.importToolboxFromTree_(e)}else if(b==WorkspaceFactoryController.MODE_PRELOAD){c.setMode(WorkspaceFactoryController.MODE_PRELOAD);
if(0<c.toolboxWorkspace.getAllBlocks(!1).length&&(f=confirm("Are you sure you want to import? You will lose your current workspace blocks."),!f))return;c.importPreloadFromTree_(e)}else throw Error("Unknown import mode: "+b);}catch(g){alert("Cannot load XML from file."),console.log(g)}finally{Blockly.Events.enable()}};d.readAsText(a)}};
WorkspaceFactoryController.prototype.importToolboxFromTree_=function(a){this.model.clearToolboxList();this.view.clearToolboxTabs();if(0==a.getElementsByTagName("category").length)Blockly.Xml.domToWorkspace(a,this.toolboxWorkspace),this.toolboxWorkspace.cleanUp(),this.convertShadowBlocks(),this.view.addEmptyCategoryMessage();else for(var b=0,c;c=a.children[b];b++)if("category"==c.tagName){this.createCategory(c.getAttribute("name"),!1);var d=this.model.getElementByIndex(b);this.switchElement(d.id);
for(var e=0,f;f=c.children[e];e++)Blockly.Xml.domToBlock(f,this.toolboxWorkspace);this.toolboxWorkspace.cleanUp();this.convertShadowBlocks();c.getAttribute("colour")&&(d.changeColor(c.getAttribute("colour")),this.view.setBorderColor(d.id,d.color));c.getAttribute("custom")&&this.model.addCustomTag(d,c.getAttribute("custom"))}else this.addSeparator(),this.switchElement(this.model.getElementByIndex(b).id);this.view.updateState(this.model.getIndexByElementId(this.model.getSelectedId()),this.model.getSelected());
this.saveStateFromWorkspace();this.view.setCategoryOptions(this.model.hasElements());this.generateNewOptions();this.updatePreview()};WorkspaceFactoryController.prototype.importPreloadFromTree_=function(a){this.clearAndLoadXml_(a);this.model.savePreloadXml(a);this.updatePreview()};WorkspaceFactoryController.prototype.importPreloadFromTree_=function(a){this.clearAndLoadXml_(a);this.model.savePreloadXml(a);this.saveStateFromWorkspace();this.updatePreview()};
WorkspaceFactoryController.prototype.importPreloadFromTree_=function(a){this.clearAndLoadXml_(a);this.model.savePreloadXml(a);this.saveStateFromWorkspace();this.updatePreview()};
WorkspaceFactoryController.prototype.clearAll=function(){confirm("Are you sure you want to clear all of your work in Workspace Factory?")&&(this.model.hasElements(),this.model.clearToolboxList(),this.view.clearToolboxTabs(),this.model.savePreloadXml(Blockly.utils.xml.createElement("xml")),this.view.addEmptyCategoryMessage(),this.view.updateState(-1,null),this.toolboxWorkspace.clear(),this.toolboxWorkspace.clearUndo(),this.saveStateFromWorkspace(),this.hasUnsavedPreloadChanges=this.hasUnsavedToolboxChanges=
!1,this.view.setCategoryOptions(this.model.hasElements()),this.generateNewOptions(),this.updatePreview())};WorkspaceFactoryController.prototype.addShadow=function(){Blockly.selected&&(Blockly.selected.setWarningText(null),this.addShadowForBlockAndChildren_(Blockly.selected),this.saveStateFromWorkspace(),this.updatePreview())};
WorkspaceFactoryController.prototype.addShadowForBlockAndChildren_=function(a){this.view.markShadowBlock(a);this.model.addShadowBlock(a.id);FactoryUtils.hasVariableField(a)&&a.setWarningText("Cannot make variable blocks shadow blocks.");a=a.getChildren();for(var b=0;b<a.length;b++)this.addShadowForBlockAndChildren_(a[b])};
WorkspaceFactoryController.prototype.removeShadow=function(){Blockly.selected&&(this.model.removeShadowBlock(Blockly.selected.id),this.view.unmarkShadowBlock(Blockly.selected),Blockly.selected.setWarningText(null),this.saveStateFromWorkspace(),this.updatePreview())};WorkspaceFactoryController.prototype.isUserGenShadowBlock=function(a){return this.model.isShadowBlock(a)};
WorkspaceFactoryController.prototype.convertShadowBlocks=function(){for(var a=this.toolboxWorkspace.getAllBlocks(!1),b=0,c;c=a[b];b++)if(c.isShadow()){c.setShadow(!1);var d=c.outputConnection?c.outputConnection.targetConnection:c.previousConnection.targetConnection;d&&d.setShadowDom(null);this.model.addShadowBlock(c.id);this.view.markShadowBlock(c)}};
WorkspaceFactoryController.prototype.setMode=function(a){this.selectedMode!=a&&this.selectedMode!=a&&(this.view.setModeSelection(a),this.selectedMode=a,this.view.updateHelpText(a),a==WorkspaceFactoryController.MODE_TOOLBOX?(this.model.savePreloadXml(Blockly.Xml.workspaceToDom(this.toolboxWorkspace)),this.clearAndLoadXml_(this.model.getSelectedXml()),this.view.disableWorkspace(this.view.shouldDisableWorkspace(this.model.getSelected()))):(this.model.getSelected()&&this.model.getSelected().saveFromWorkspace(this.toolboxWorkspace),
this.clearAndLoadXml_(this.model.getPreloadXml()),this.view.disableWorkspace(!1)))};WorkspaceFactoryController.prototype.clearAndLoadXml_=function(a){this.toolboxWorkspace.clear();this.toolboxWorkspace.clearUndo();Blockly.Xml.domToWorkspace(a,this.toolboxWorkspace);this.view.markShadowBlocks(this.model.getShadowBlocksInWorkspace(this.toolboxWorkspace.getAllBlocks(!1)));this.warnForUndefinedBlocks_()};
WorkspaceFactoryController.prototype.setStandardOptionsAndUpdate=function(){this.view.setBaseOptions();this.view.setCategoryOptions(this.model.hasElements());this.generateNewOptions()};WorkspaceFactoryController.prototype.generateNewOptions=function(){this.model.setOptions(this.readOptions_());this.reinjectPreview(Blockly.utils.toolbox.parseToolboxTree(this.generator.generateToolboxXml()))};
WorkspaceFactoryController.prototype.readOptions_=function(){var a=Object.create(null),b=document.getElementById("option_readOnly_checkbox").checked;if(b)a.readOnly=!0;else{a.collapse=document.getElementById("option_collapse_checkbox").checked;a.comments=document.getElementById("option_comments_checkbox").checked;a.disable=document.getElementById("option_disable_checkbox").checked;if(document.getElementById("option_infiniteBlocks_checkbox").checked)a.maxBlocks=Infinity;else{var c=document.getElementById("option_maxBlocks_number").value;
a.maxBlocks="string"==typeof c?parseInt(c):c}a.trashcan=document.getElementById("option_trashcan_checkbox").checked;a.horizontalLayout=document.getElementById("option_horizontalLayout_checkbox").checked;a.toolboxPosition=document.getElementById("option_toolboxPosition_checkbox").checked?"end":"start"}a.css=document.getElementById("option_css_checkbox").checked;a.media=document.getElementById("option_media_text").value;a.rtl=document.getElementById("option_rtl_checkbox").checked;a.scrollbars=document.getElementById("option_scrollbars_checkbox").checked;
a.sounds=document.getElementById("option_sounds_checkbox").checked;a.oneBasedIndex=document.getElementById("option_oneBasedIndex_checkbox").checked;if(document.getElementById("option_grid_checkbox").checked){c=Object.create(null);var d=document.getElementById("gridOption_spacing_number").value;c.spacing="string"==typeof d?parseInt(d):d;d=document.getElementById("gridOption_length_number").value;c.length="string"==typeof d?parseInt(d):d;c.colour=document.getElementById("gridOption_colour_text").value;
b||(c.snap=document.getElementById("gridOption_snap_checkbox").checked);a.grid=c}document.getElementById("option_zoom_checkbox").checked&&(b=Object.create(null),b.controls=document.getElementById("zoomOption_controls_checkbox").checked,b.wheel=document.getElementById("zoomOption_wheel_checkbox").checked,c=document.getElementById("zoomOption_startScale_number").value,b.startScale="string"==typeof c?Number(c):c,c=document.getElementById("zoomOption_maxScale_number").value,b.maxScale="string"==typeof c?
Number(c):c,c=document.getElementById("zoomOption_minScale_number").value,b.minScale="string"==typeof c?Number(c):c,c=document.getElementById("zoomOption_scaleSpeed_number").value,b.scaleSpeed="string"==typeof c?Number(c):c,a.zoom=b);return a};WorkspaceFactoryController.prototype.importBlocks=function(a,b){var c=a.name,d=this,e=new FileReader;e.onload=function(){return d.importBlocksData(c,e.result,b)};e.readAsText(a)};
WorkspaceFactoryController.prototype.importBlocksData=function(a,b,c,d){try{var e=FactoryUtils.defineAndGetBlockTypes(b,c);if(!this.model.hasDefinedBlockTypes(e)||confirm("An imported block uses the same name as a block already in your toolbox. Are you sure you want to override the currently defined block?")){var f=this.generator.getDefinedBlocks(e),g=FactoryUtils.generateCategoryXml(f,a);void 0==d&&(d=Math.floor(360*Math.random()));g.setAttribute("colour",d);a&&(this.toolbox.appendChild(g),this.toolboxWorkspace.updateToolbox(this.toolbox));
this.model.addImportedBlockTypes(e);return g}}catch(h){alert("Cannot read blocks from file."),window.console.log(h)}};WorkspaceFactoryController.prototype.setBlockLibCategory=function(a,b){var c=document.getElementById("blockLibCategory");a.id="blockLibCategory";a.setAttribute("colour",260);this.toolbox.replaceChild(a,c);this.toolboxWorkspace.toolbox_.clearSelection();this.toolboxWorkspace.updateToolbox(this.toolbox);this.model.updateLibBlockTypes(b);this.clearAndLoadXml_(Blockly.Xml.workspaceToDom(this.toolboxWorkspace))};
WorkspaceFactoryController.prototype.getAllUsedBlockTypes=function(){return this.model.getAllUsedBlockTypes()};WorkspaceFactoryController.prototype.isDefinedBlock=function(a){return this.model.isDefinedBlockType(a.type)};WorkspaceFactoryController.prototype.warnForUndefinedBlocks_=function(){for(var a=this.toolboxWorkspace.getAllBlocks(!1),b=0,c;c=a[b];b++)this.isDefinedBlock(c)||c.setWarningText(c.type+" is not defined (it is not a standard block,\nin your block library, or an imported block)")};
WorkspaceFactoryController.prototype.hasVariablesCategory=function(){return this.model.hasVariables()};WorkspaceFactoryController.prototype.hasProceduresCategory=function(){return this.model.hasProcedures()};WorkspaceFactoryController.prototype.hasUnsavedChanges=function(){return this.hasUnsavedToolboxChanges||this.hasUnsavedPreloadChanges};var WorkspaceFactoryGenerator=WorkspaceFactoryGenerator||Object.create(null);WorkspaceFactoryGenerator=function(a){this.model=a;a=document.createElement("div");var b=Blockly.utils.genUid();a.id=b;a.style.display="none";document.body.appendChild(a);this.hiddenWorkspace=Blockly.inject(b)};
WorkspaceFactoryGenerator.prototype.generateToolboxXml=function(){var a=Blockly.utils.xml.createElement("xml");a.id="toolbox";a.setAttribute("style","display: none");if(this.model.hasElements()){if(!this.model.getSelected())throw Error("Selected is null when the toolbox is empty.");this.model.getSelectedXml();for(var b=this.model.getToolboxList(),c=0;c<b.length;c++){var d=b[c];if(d.type==ListElement.TYPE_SEPARATOR)var e=Blockly.utils.xml.createElement("sep");else d.type==ListElement.TYPE_CATEGORY&&
(e=Blockly.utils.xml.createElement("category"),e.setAttribute("name",d.name),null!=d.color&&e.setAttribute("colour",d.color),null!=d.custom&&e.setAttribute("custom",d.custom),this.loadToHiddenWorkspace_(d.xml),this.appendHiddenWorkspaceToDom_(e));a.appendChild(e)}}else this.loadToHiddenWorkspace_(this.model.getSelectedXml()),this.appendHiddenWorkspaceToDom_(a);return a};
WorkspaceFactoryGenerator.prototype.generateWorkspaceXml=function(){this.hiddenWorkspace.clear();Blockly.Xml.domToWorkspace(this.model.getPreloadXml(),this.hiddenWorkspace);this.setShadowBlocksInHiddenWorkspace_();var a=Blockly.Xml.workspaceToDom(this.hiddenWorkspace);a.id="workspaceBlocks";a.setAttribute("style","display: none");return a};
WorkspaceFactoryGenerator.prototype.generateInjectString=function(){var a=function(c,d){if(!c)return"{}\n";var e="";for(g in c){var f="grid"==g||"zoom"==g?d+g+" : {\n"+a(c[g],d+"\t")+d+"}, \n":"string"==typeof c[g]?d+g+" : '"+c[g]+"', \n":d+g+" : "+c[g]+", \n";e+=f}var g=e.lastIndexOf(",");return e=e.slice(0,g)+"\n"},b=a(this.model.options,"\t");this.model.options.readOnly||(b="\ttoolbox : toolbox, \n"+b);return b='/* TODO: Change toolbox XML ID if necessary. Can export toolbox XML from Workspace Factory. */\nvar toolbox = document.getElementById("toolbox");\n\nvar options = { \n'+
(b+'};\n\n/* Inject your workspace */ \nvar workspace = Blockly.inject(/* TODO: Add ID of div to inject Blockly into */, options);\n\n/* Load Workspace Blocks from XML to workspace. Remove all code below if no blocks to load */\n\n/* TODO: Change workspace blocks XML ID if necessary. Can export workspace blocks XML from Workspace Factory. */\nvar workspaceBlocks = document.getElementById("workspaceBlocks"); \n\n/* Load blocks to workspace. */\nBlockly.Xml.domToWorkspace(workspaceBlocks, workspace);')};
WorkspaceFactoryGenerator.prototype.loadToHiddenWorkspace_=function(a){this.hiddenWorkspace.clear();Blockly.Xml.domToWorkspace(a,this.hiddenWorkspace);this.setShadowBlocksInHiddenWorkspace_()};WorkspaceFactoryGenerator.prototype.appendHiddenWorkspaceToDom_=function(a){for(var b=this.hiddenWorkspace.getTopBlocks(),c=0,d;d=b[c];c++)d=Blockly.Xml.blockToDom(d,!0),a.appendChild(d)};
WorkspaceFactoryGenerator.prototype.setShadowBlocksInHiddenWorkspace_=function(){for(var a=this.hiddenWorkspace.getAllBlocks(!1),b=0;b<a.length;b++)this.model.isShadowBlock(a[b].id)&&a[b].setShadow(!0)};WorkspaceFactoryGenerator.prototype.getDefinedBlocks=function(a){for(var b=[],c=0;c<a.length;c++)b.push(FactoryUtils.getDefinedBlock(a[c],this.hiddenWorkspace));return b};var WorkspaceFactoryModel=WorkspaceFactoryModel||Object.create(null);WorkspaceFactoryModel=function(){this.toolboxList=[];this.flyout=new ListElement(ListElement.TYPE_FLYOUT);this.shadowBlocks=[];this.selected=this.flyout;this.hasProcedureCategory=this.hasVariableCategory=!1;this.preloadXml=Blockly.utils.xml.createElement("xml");this.options=Object(null);this.libBlockTypes=[];this.importedBlockTypes=[]};
WorkspaceFactoryModel.prototype.hasCategoryByName=function(a){for(var b=0;b<this.toolboxList.length;b++)if(this.toolboxList[b].type==ListElement.TYPE_CATEGORY&&this.toolboxList[b].name==a)return!0;return!1};WorkspaceFactoryModel.prototype.hasVariables=function(){return this.hasVariableCategory};WorkspaceFactoryModel.prototype.hasProcedures=function(){return this.hasProcedureCategory};WorkspaceFactoryModel.prototype.hasElements=function(){return 0<this.toolboxList.length};
WorkspaceFactoryModel.prototype.addElementToList=function(a){this.hasVariableCategory="VARIABLE"==a.custom?!0:this.hasVariableCategory;this.hasProcedureCategory="PROCEDURE"==a.custom?!0:this.hasProcedureCategory;this.toolboxList.push(a);this.flyout=null};
WorkspaceFactoryModel.prototype.deleteElementFromList=function(a){0>a||a>=this.toolboxList.length||(this.hasVariableCategory="VARIABLE"==this.toolboxList[a].custom?!1:this.hasVariableCategory,this.hasProcedureCategory="PROCEDURE"==this.toolboxList[a].custom?!1:this.hasProcedureCategory,this.toolboxList.splice(a,1))};WorkspaceFactoryModel.prototype.createDefaultSelectedIfEmpty=function(){0==this.toolboxList.length&&(this.selected=this.flyout=new ListElement(ListElement.TYPE_FLYOUT))};
WorkspaceFactoryModel.prototype.moveElementToIndex=function(a,b,c){if(0>b||b>=this.toolboxList.length||0>c||c>=this.toolboxList.length)throw Error("Index out of bounds when moving element in the model.");this.deleteElementFromList(c);this.toolboxList.splice(b,0,a)};WorkspaceFactoryModel.prototype.getSelectedId=function(){return this.selected?this.selected.id:null};WorkspaceFactoryModel.prototype.getSelectedName=function(){return this.selected?this.selected.name:null};
WorkspaceFactoryModel.prototype.getSelected=function(){return this.selected};WorkspaceFactoryModel.prototype.setSelectedById=function(a){this.selected=this.getElementById(a)};WorkspaceFactoryModel.prototype.getIndexByElementId=function(a){for(var b=0;b<this.toolboxList.length;b++)if(this.toolboxList[b].id==a)return b;return-1};WorkspaceFactoryModel.prototype.getElementById=function(a){for(var b=0;b<this.toolboxList.length;b++)if(this.toolboxList[b].id==a)return this.toolboxList[b];return null};
WorkspaceFactoryModel.prototype.getElementByIndex=function(a){return 0>a||a>=this.toolboxList.length?null:this.toolboxList[a]};WorkspaceFactoryModel.prototype.getSelectedXml=function(){return this.selected?this.selected.xml:null};WorkspaceFactoryModel.prototype.getToolboxList=function(){return this.toolboxList};WorkspaceFactoryModel.prototype.getCategoryIdByName=function(a){for(var b=0;b<this.toolboxList.length;b++)if(this.toolboxList[b].name==a)return this.toolboxList[b].id;return null};
WorkspaceFactoryModel.prototype.clearToolboxList=function(){this.toolboxList=[];this.hasProcedureCategory=this.hasVariableCategory=!1;this.shadowBlocks=[];this.selected.xml=Blockly.utils.xml.createElement("xml")};WorkspaceFactoryModel.prototype.addShadowBlock=function(a){this.shadowBlocks.push(a)};WorkspaceFactoryModel.prototype.removeShadowBlock=function(a){for(var b=0;b<this.shadowBlocks.length;b++)if(this.shadowBlocks[b]==a){this.shadowBlocks.splice(b,1);break}};
WorkspaceFactoryModel.prototype.isShadowBlock=function(a){for(var b=0;b<this.shadowBlocks.length;b++)if(this.shadowBlocks[b]==a)return!0;return!1};WorkspaceFactoryModel.prototype.getShadowBlocksInWorkspace=function(a){for(var b=[],c=0;c<a.length;c++)this.isShadowBlock(a[c].id)&&b.push(a[c]);return b};
WorkspaceFactoryModel.prototype.addCustomTag=function(a,b){a.type==ListElement.TYPE_CATEGORY&&("VARIABLE"==b?(this.hasVariableCategory=!0,a.custom="VARIABLE"):"PROCEDURE"==b&&(this.hasProcedureCategory=!0,a.custom="PROCEDURE"))};WorkspaceFactoryModel.prototype.savePreloadXml=function(a){this.preloadXml=a};WorkspaceFactoryModel.prototype.getPreloadXml=function(){return this.preloadXml};WorkspaceFactoryModel.prototype.setOptions=function(a){this.options=a};
WorkspaceFactoryModel.prototype.getAllUsedBlockTypes=function(){var a=[],b=function(e,f){for(var g=e.getElementsByTagName("block"),h=0;h<g.length;h++){var k=g[h].getAttribute("type");-1==f.indexOf(k)&&f.push(k)}};if(this.flyout)b(this.getSelectedXml(),a);else for(var c=0,d;d=this.toolboxList[c];c++)d.type==ListElement.TYPE_CATEGORY&&b(d.xml,a);b(this.getPreloadXml(),a);return a};WorkspaceFactoryModel.prototype.addImportedBlockTypes=function(a){this.importedBlockTypes=this.importedBlockTypes.concat(a)};
WorkspaceFactoryModel.prototype.updateLibBlockTypes=function(a){this.libBlockTypes=a};WorkspaceFactoryModel.prototype.isDefinedBlockType=function(a){var b=-1!=StandardCategories.coreBlockTypes.indexOf(a),c=-1!=this.libBlockTypes.indexOf(a);a=-1!=this.importedBlockTypes.indexOf(a);return b||c||a};WorkspaceFactoryModel.prototype.hasDefinedBlockTypes=function(a){for(var b=0,c;c=a[b];b++)if(this.isDefinedBlockType(c))return!0;return!1};var ListElement=ListElement||Object.create(null);
ListElement=function(a,b){this.type=a;this.xml=Blockly.utils.xml.createElement("xml");this.name=b?b:null;this.id=Blockly.utils.genUid();this.custom=this.color=null};ListElement.TYPE_CATEGORY="category";ListElement.TYPE_SEPARATOR="separator";ListElement.TYPE_FLYOUT="flyout";ListElement.prototype.saveFromWorkspace=function(a){if(this.type==ListElement.TYPE_FLYOUT||this.type==ListElement.TYPE_CATEGORY)this.xml=Blockly.Xml.workspaceToDom(a)};
ListElement.prototype.changeName=function(a){this.type==ListElement.TYPE_CATEGORY&&(this.name=a)};ListElement.prototype.changeColor=function(a){this.type==ListElement.TYPE_CATEGORY&&(this.color=a)};ListElement.prototype.copy=function(){copy=new ListElement(this.type);copy.id=Blockly.utils.genUid();copy.name=this.name;copy.xml=this.xml;copy.color=this.color;copy.custom=this.custom;return copy};var WorkspaceFactoryView=WorkspaceFactoryView||Object.create(null);WorkspaceFactoryView=function(){this.tabMap=Object.create(null)};WorkspaceFactoryView.prototype.addCategoryRow=function(a,b){var c=document.getElementById("categoryTable"),d=c.rows.length;0==d&&(document.getElementById("categoryHeader").textContent="Your categories:");var e=c.insertRow(d).insertCell(0);e.id=this.createCategoryIdName(a);e.textContent=a;this.tabMap[b]=c.rows[d].cells[0];return e};
WorkspaceFactoryView.prototype.deleteElementRow=function(a,b){delete this.tabMap[a];document.getElementById("categoryTable").deleteRow(b);this.addEmptyCategoryMessage()};WorkspaceFactoryView.prototype.addEmptyCategoryMessage=function(){document.getElementById("categoryTable").rows.length||(document.getElementById("categoryHeader").textContent="You currently have no categories.")};
WorkspaceFactoryView.prototype.updateState=function(a,b){document.getElementById("button_editCategory").disabled=0>a||b.type!=ListElement.TYPE_CATEGORY;document.getElementById("button_remove").disabled=0>a;document.getElementById("button_up").disabled=0>=a;var c=document.getElementById("categoryTable");document.getElementById("button_down").disabled=a>=c.rows.length-1||0>a;this.disableWorkspace(this.shouldDisableWorkspace(b))};
WorkspaceFactoryView.prototype.createCategoryIdName=function(a){return"tab_"+a};WorkspaceFactoryView.prototype.setCategoryTabSelection=function(a,b){this.tabMap[a]&&(this.tabMap[a].className=b?"tabon":"taboff")};WorkspaceFactoryView.prototype.bindClick=function(a,b){"string"==typeof a&&(a=document.getElementById(a));a.addEventListener("click",b,!0);a.addEventListener("touchend",b,!0)};
WorkspaceFactoryView.prototype.createAndDownloadFile=function(a,b){var c=new MouseEvent("click",{view:window,bubbles:!0,cancelable:!1}),d=document.createElement("a");d.href=window.URL.createObjectURL(b);d.download=a;d.textContent="Download file!";d.dispatchEvent(c)};WorkspaceFactoryView.prototype.updateCategoryName=function(a,b){this.tabMap[b].textContent=a;this.tabMap[b].id=this.createCategoryIdName(a)};
WorkspaceFactoryView.prototype.moveTabToIndex=function(a,b,c){var d=document.getElementById("categoryTable");if(0>b||b>=d.rows.length||0>c||c>=d.rows.length)throw Error("Index out of bounds when moving tab in the view.");b<c?(b=d.insertRow(b),b.appendChild(this.tabMap[a]),d.deleteRow(c+1)):(b=d.insertRow(b+1),b.appendChild(this.tabMap[a]),d.deleteRow(c))};
WorkspaceFactoryView.prototype.setBorderColor=function(a,b){var c=this.tabMap[a].style;b?(c.borderLeftWidth="8px",c.borderLeftStyle="solid",c.borderColor=b):(c.borderLeftWidth="",c.borderLeftStyle="",c.borderColor="")};
WorkspaceFactoryView.prototype.addSeparatorTab=function(a){var b=document.getElementById("categoryTable"),c=b.rows.length;0==c&&(document.getElementById("categoryHeader").textContent="Your categories:");var d=b.insertRow(c).insertCell(0);d.style.height="10px";this.tabMap[a]=b.rows[c].cells[0];return d};
WorkspaceFactoryView.prototype.disableWorkspace=function(a){a?(document.getElementById("toolbox_section").className="disabled",document.getElementById("toolbox_blocks").style.pointerEvents="none"):(document.getElementById("toolbox_section").className="",document.getElementById("toolbox_blocks").style.pointerEvents="auto")};
WorkspaceFactoryView.prototype.shouldDisableWorkspace=function(a){return null!=a&&a.type!=ListElement.TYPE_FLYOUT&&(a.type==ListElement.TYPE_SEPARATOR||"VARIABLE"==a.custom||"PROCEDURE"==a.custom)};WorkspaceFactoryView.prototype.clearToolboxTabs=function(){this.tabMap=[];var a=document.getElementById("categoryTable"),b=document.createElement("table");b.id="categoryTable";b.style.width="auto";a.parentElement.replaceChild(b,a)};
WorkspaceFactoryView.prototype.markShadowBlocks=function(a){for(var b=0;b<a.length;b++)this.markShadowBlock(a[b])};WorkspaceFactoryView.prototype.markShadowBlock=function(a){Blockly.utils.dom.addClass(a.svgGroup_,"shadowBlock");a.getSurroundParent()||a.setWarningText("Shadow blocks must be nested inside other blocks to be displayed.");FactoryUtils.hasVariableField(a)&&a.setWarningText("Cannot make variable blocks shadow blocks.")};
WorkspaceFactoryView.prototype.unmarkShadowBlock=function(a){Blockly.utils.dom.removeClass(a.svgGroup_,"shadowBlock")};
WorkspaceFactoryView.prototype.setModeSelection=function(a){document.getElementById("tab_preload").className=a==WorkspaceFactoryController.MODE_PRELOAD?"tabon":"taboff";document.getElementById("preload_div").style.display=a==WorkspaceFactoryController.MODE_PRELOAD?"block":"none";document.getElementById("tab_toolbox").className=a==WorkspaceFactoryController.MODE_TOOLBOX?"tabon":"taboff";document.getElementById("toolbox_div").style.display=a==WorkspaceFactoryController.MODE_TOOLBOX?"block":"none"};
WorkspaceFactoryView.prototype.updateHelpText=function(a){a=a==WorkspaceFactoryController.MODE_TOOLBOX?"Drag blocks into the workspace to configure the toolbox in your custom workspace.":"Drag blocks into the workspace to pre-load them in your custom workspace.";document.getElementById("editHelpText").textContent=a};
WorkspaceFactoryView.prototype.setBaseOptions=function(){document.getElementById("option_readOnly_checkbox").checked=!1;blocklyFactory.ifCheckedEnable(!0,["readonly1","readonly2"]);document.getElementById("option_css_checkbox").checked=!0;document.getElementById("option_maxBlocks_number").value=100;document.getElementById("option_media_text").value="https://blockly-demo.appspot.com/static/media/";document.getElementById("option_rtl_checkbox").checked=!1;document.getElementById("option_sounds_checkbox").checked=
!0;document.getElementById("option_oneBasedIndex_checkbox").checked=!0;document.getElementById("option_horizontalLayout_checkbox").checked=!1;document.getElementById("option_toolboxPosition_checkbox").checked=!1;document.getElementById("option_infiniteBlocks_checkbox").checked=!0;document.getElementById("maxBlockNumber_option").style.display="none";document.getElementById("option_grid_checkbox").checked=!1;document.getElementById("grid_options").style.display="none";document.getElementById("option_zoom_checkbox").checked=
!1;document.getElementById("zoom_options").style.display="none";document.getElementById("gridOption_spacing_number").value=20;document.getElementById("gridOption_length_number").value=1;document.getElementById("gridOption_colour_text").value="#888";document.getElementById("gridOption_snap_checkbox").checked=!1;document.getElementById("zoomOption_controls_checkbox").checked=!0;document.getElementById("zoomOption_wheel_checkbox").checked=!0;document.getElementById("zoomOption_startScale_number").value=
1;document.getElementById("zoomOption_maxScale_number").value=3;document.getElementById("zoomOption_minScale_number").value=.3;document.getElementById("zoomOption_scaleSpeed_number").value=1.2};
WorkspaceFactoryView.prototype.setCategoryOptions=function(a){document.getElementById("option_collapse_checkbox").checked=a;document.getElementById("option_comments_checkbox").checked=a;document.getElementById("option_disable_checkbox").checked=a;document.getElementById("option_scrollbars_checkbox").checked=a;document.getElementById("option_trashcan_checkbox").checked=a};var StandardCategories=StandardCategories||Object.create(null);StandardCategories.categoryMap=Object.create(null);StandardCategories.categoryMap.logic=new ListElement(ListElement.TYPE_CATEGORY,"Logic");StandardCategories.categoryMap.logic.xml=Blockly.Xml.textToDom('<xml xmlns="https://developers.google.com/blockly/xml"><block type="controls_if"></block><block type="logic_compare"></block><block type="logic_operation"></block><block type="logic_negate"></block><block type="logic_boolean"></block><block type="logic_null"></block><block type="logic_ternary"></block></xml>');
StandardCategories.categoryMap.logic.hue=210;StandardCategories.categoryMap.loops=new ListElement(ListElement.TYPE_CATEGORY,"Loops");StandardCategories.categoryMap.loops.xml=Blockly.Xml.textToDom('<xml xmlns="https://developers.google.com/blockly/xml"><block type="controls_repeat_ext"><value name="TIMES"><shadow type="math_number"><field name="NUM">10</field></shadow></value></block><block type="controls_whileUntil"></block><block type="controls_for"><value name="FROM"><shadow type="math_number"><field name="NUM">1</field></shadow></value><value name="TO"><shadow type="math_number"><field name="NUM">10</field></shadow></value><value name="BY"><shadow type="math_number"><field name="NUM">1</field></shadow></value></block><block type="controls_forEach"></block><block type="controls_flow_statements"></block></xml>');
StandardCategories.categoryMap.loops.hue=120;StandardCategories.categoryMap.math=new ListElement(ListElement.TYPE_CATEGORY,"Math");StandardCategories.categoryMap.math.xml=Blockly.Xml.textToDom('<xml xmlns="https://developers.google.com/blockly/xml"><block type="math_number"></block><block type="math_arithmetic"><value name="A"><shadow type="math_number"><field name="NUM">1</field></shadow></value><value name="B"><shadow type="math_number"><field name="NUM">1</field></shadow></value></block><block type="math_single"><value name="NUM"><shadow type="math_number"><field name="NUM">9</field></shadow></value></block><block type="math_trig"><value name="NUM"><shadow type="math_number"><field name="NUM">45</field></shadow></value></block><block type="math_constant"></block><block type="math_number_property"><value name="NUMBER_TO_CHECK"><shadow type="math_number"><field name="NUM">0</field></shadow></value></block><block type="math_round"><value name="NUM"><shadow type="math_number"><field name="NUM">3.1</field></shadow></value></block><block type="math_on_list"></block><block type="math_modulo"><value name="DIVIDEND"><shadow type="math_number"><field name="NUM">64</field></shadow></value><value name="DIVISOR"><shadow type="math_number"><field name="NUM">10</field></shadow></value></block><block type="math_constrain"><value name="VALUE"><shadow type="math_number"><field name="NUM">50</field></shadow></value><value name="LOW"><shadow type="math_number"><field name="NUM">1</field></shadow></value><value name="HIGH"><shadow type="math_number"><field name="NUM">100</field></shadow></value></block><block type="math_random_int"><value name="FROM"><shadow type="math_number"><field name="NUM">1</field></shadow></value><value name="TO"><shadow type="math_number"><field name="NUM">100</field></shadow></value></block><block type="math_random_float"></block></xml>');
StandardCategories.categoryMap.math.hue=230;StandardCategories.categoryMap.text=new ListElement(ListElement.TYPE_CATEGORY,"Text");StandardCategories.categoryMap.text.xml=Blockly.Xml.textToDom('<xml xmlns="https://developers.google.com/blockly/xml"><block type="text"></block><block type="text_join"></block><block type="text_append"><value name="TEXT"><shadow type="text"></shadow></value></block><block type="text_length"><value name="VALUE"><shadow type="text"><field name="TEXT">abc</field></shadow></value></block><block type="text_isEmpty"><value name="VALUE"><shadow type="text"><field name="TEXT"></field></shadow></value></block><block type="text_indexOf"><value name="VALUE"><block type="variables_get"><field name="VAR">text</field></block></value><value name="FIND"><shadow type="text"><field name="TEXT">abc</field></shadow></value></block><block type="text_charAt"><value name="VALUE"><block type="variables_get"><field name="VAR">text</field></block></value></block><block type="text_getSubstring"><value name="STRING"><block type="variables_get"><field name="VAR">text</field></block></value></block><block type="text_changeCase"><value name="TEXT"><shadow type="text"><field name="TEXT">abc</field></shadow></value></block><block type="text_trim"><value name="TEXT"><shadow type="text"><field name="TEXT">abc</field></shadow></value></block><block type="text_print"><value name="TEXT"><shadow type="text"><field name="TEXT">abc</field></shadow></value></block><block type="text_prompt_ext"><value name="TEXT"><shadow type="text"><field name="TEXT">abc</field></shadow></value></block></xml>');
StandardCategories.categoryMap.text.hue=160;StandardCategories.categoryMap.lists=new ListElement(ListElement.TYPE_CATEGORY,"Lists");StandardCategories.categoryMap.lists.xml=Blockly.Xml.textToDom('<xml xmlns="https://developers.google.com/blockly/xml"><block type="lists_create_with"><mutation items="0"></mutation></block><block type="lists_create_with"></block><block type="lists_repeat"><value name="NUM"><shadow type="math_number"><field name="NUM">5</field></shadow></value></block><block type="lists_length"></block><block type="lists_isEmpty"></block><block type="lists_indexOf"><value name="VALUE"><block type="variables_get"><field name="VAR">list</field></block></value></block><block type="lists_getIndex"><value name="VALUE"><block type="variables_get"><field name="VAR">list</field></block></value></block><block type="lists_setIndex"><value name="LIST"><block type="variables_get"><field name="VAR">list</field></block></value></block><block type="lists_getSublist"><value name="LIST"><block type="variables_get"><field name="VAR">list</field></block></value></block><block type="lists_split"><value name="DELIM"><shadow type="text"><field name="TEXT">,</field></shadow></value></block><block type="lists_sort"></block></xml>');
StandardCategories.categoryMap.lists.hue=260;StandardCategories.categoryMap.colour=new ListElement(ListElement.TYPE_CATEGORY,"Colour");StandardCategories.categoryMap.colour.xml=Blockly.Xml.textToDom('<xml xmlns="https://developers.google.com/blockly/xml"><block type="colour_picker"></block><block type="colour_random"></block><block type="colour_rgb"><value name="RED"><shadow type="math_number"><field name="NUM">100</field></shadow></value><value name="GREEN"><shadow type="math_number"><field name="NUM">50</field></shadow></value><value name="BLUE"><shadow type="math_number"><field name="NUM">0</field></shadow></value></block><block type="colour_blend"><value name="COLOUR1"><shadow type="colour_picker"><field name="COLOUR">#ff0000</field></shadow></value><value name="COLOUR2"><shadow type="colour_picker"><field name="COLOUR">#3333ff</field></shadow></value><value name="RATIO"><shadow type="math_number"><field name="NUM">0.5</field></shadow></value></block></xml>');
StandardCategories.categoryMap.colour.hue=20;StandardCategories.categoryMap.functions=new ListElement(ListElement.TYPE_CATEGORY,"Functions");StandardCategories.categoryMap.functions.hue=290;StandardCategories.categoryMap.functions.custom="PROCEDURE";StandardCategories.categoryMap.variables=new ListElement(ListElement.TYPE_CATEGORY,"Variables");StandardCategories.categoryMap.variables.hue=330;StandardCategories.categoryMap.variables.custom="VARIABLE";
StandardCategories.categoryMap.typedvariables=new ListElement(ListElement.TYPE_CATEGORY,"TypedVariables");StandardCategories.categoryMap.typedvariables.custom="VARIABLE_DYNAMIC";StandardCategories.categoryMap.typedvariables.hue=290;StandardCategories.coreBlockTypes="controls_if logic_compare logic_operation logic_negate logic_boolean logic_null logic_ternary controls_repeat_ext controls_whileUntil controls_for controls_forEach controls_flow_statements math_number math_arithmetic math_single math_trig math_constant math_number_property math_change math_round math_on_list math_modulo math_constrain math_random_int math_random_float text text_join text_append text_length text_isEmpty text_indexOf variables_get text_charAt text_getSubstring text_changeCase text_trim text_print text_prompt_ext colour_picker colour_random colour_rgb colour_blend lists_create_with lists_repeat lists_length lists_isEmpty lists_indexOf lists_getIndex lists_setIndex lists_getSublist lists_split lists_sort variables_set procedures_defreturn procedures_ifreturn procedures_defnoreturn procedures_callreturn".split(" ");var FactoryUtils=FactoryUtils||Object.create(null);FactoryUtils.getBlockDefinition=function(a,b,c,d){a=FactoryUtils.cleanBlockType(a);switch(c){case "JSON":var e=FactoryUtils.formatJson_(a,b);break;case "JavaScript":e=FactoryUtils.formatJavaScript_(a,b,d)}return e};FactoryUtils.cleanBlockType=function(a){return a?a.replace(/\W/g,"_").replace(/^(\d)/,"_$1"):""};
FactoryUtils.getGeneratorStub=function(a,b){function c(m,l){l=l.toLowerCase().replace(/\W/g,"_");return"  var "+m+"_"+l}if(BlockFactory.updateBlocksFlag){BlockFactory.mainWorkspace.clear();var d=BlockDefinitionExtractor.buildBlockFactoryWorkspace(a);Blockly.Xml.domToWorkspace(d,BlockFactory.mainWorkspace);BlockFactory.updateBlocksFlag=!1;setTimeout(function(){BlockFactory.updateBlocksFlagDelayed=!1},3E3)}BlockFactory.lastUpdatedBlock=a;d=[];d.push("Blockly."+b+"['"+a.type+"'] = function(block) {");
for(var e=0,f;f=a.inputList[e];e++){for(var g=0,h;h=f.fieldRow[g];g++){var k=h.name;k&&(h instanceof Blockly.FieldVariable?d.push(c("variable",k)+" = Blockly."+b+".variableDB_.getName(block.getFieldValue('"+k+"'), Blockly.Variables.NAME_TYPE);"):h instanceof Blockly.FieldAngle?d.push(c("angle",k)+" = block.getFieldValue('"+k+"');"):h instanceof Blockly.FieldColour?d.push(c("colour",k)+" = block.getFieldValue('"+k+"');"):h instanceof Blockly.FieldCheckbox?d.push(c("checkbox",k)+" = block.getFieldValue('"+
k+"') == 'TRUE';"):h instanceof Blockly.FieldDropdown?d.push(c("dropdown",k)+" = block.getFieldValue('"+k+"');"):h instanceof Blockly.FieldNumber?d.push(c("number",k)+" = block.getFieldValue('"+k+"');"):h instanceof Blockly.FieldTextInput&&d.push(c("text",k)+" = block.getFieldValue('"+k+"');"))}(k=f.name)&&(f.type==Blockly.INPUT_VALUE?d.push(c("value",k)+" = Blockly."+b+".valueToCode(block, '"+k+"', Blockly."+b+".ORDER_ATOMIC);"):f.type==Blockly.NEXT_STATEMENT&&d.push(c("statements",k)+" = Blockly."+
b+".statementToCode(block, '"+k+"');"))}e={JavaScript:";",Python:"",PHP:";",Lua:"",Dart:";"};d.push("  // TODO: Assemble "+b+" into code variable.");a.outputConnection?(d.push("  var code = '...';"),d.push("  // TODO: Change ORDER_NONE to the correct strength."),d.push("  return [code, Blockly."+b+".ORDER_NONE];")):(d.push("  var code = '..."+(e[b]||"")+"\\n';"),d.push("  return code;"));d.push("};");return d.join("\n")};
FactoryUtils.formatJson_=function(a,b){var c={};c.type=a;for(var d=[],e=[],f=b.getInputTargetBlock("INPUTS"),g=null;f;){if(!f.disabled&&!f.getInheritedDisabled()){var h=FactoryUtils.getFieldsJson_(f.getInputTargetBlock("FIELDS"));for(g=0;g<h.length;g++)"string"==typeof h[g]?d.push(h[g].replace(/%/g,"%%")):(e.push(h[g]),d.push("%"+e.length));h={type:f.type};"input_dummy"!=f.type&&(h.name=f.getFieldValue("INPUTNAME"));if(g=JSON.parse(FactoryUtils.getOptTypesFrom(f,"TYPE")||"null"))h.check=g;g=f.getFieldValue("ALIGN");
"LEFT"!=g&&(h.align=g);e.push(h);d.push("%"+e.length);g=f}f=f.nextConnection&&f.nextConnection.targetBlock()}g&&"input_dummy"==g.type&&(h=g.getInputTargetBlock("FIELDS"))&&""!=FactoryUtils.getFieldsJson_(h).join("").trim()&&(g=g.getFieldValue("ALIGN"),"LEFT"!=g&&(c.lastDummyAlign0=g),e.pop(),d.pop());c.message0=d.join(" ");e.length&&(c.args0=e);"EXT"==b.getFieldValue("INLINE")?c.inputsInline=!1:"INT"==b.getFieldValue("INLINE")&&(c.inputsInline=!0);switch(b.getFieldValue("CONNECTIONS")){case "LEFT":c.output=
JSON.parse(FactoryUtils.getOptTypesFrom(b,"OUTPUTTYPE")||"null");break;case "BOTH":c.previousStatement=JSON.parse(FactoryUtils.getOptTypesFrom(b,"TOPTYPE")||"null");c.nextStatement=JSON.parse(FactoryUtils.getOptTypesFrom(b,"BOTTOMTYPE")||"null");break;case "TOP":c.previousStatement=JSON.parse(FactoryUtils.getOptTypesFrom(b,"TOPTYPE")||"null");break;case "BOTTOM":c.nextStatement=JSON.parse(FactoryUtils.getOptTypesFrom(b,"BOTTOMTYPE")||"null")}(d=b.getInputTargetBlock("COLOUR"))&&!d.disabled&&(d=parseInt(d.getFieldValue("HUE"),
10),c.colour=d);c.tooltip=FactoryUtils.getTooltipFromRootBlock_(b);c.helpUrl=FactoryUtils.getHelpUrlFromRootBlock_(b);return JSON.stringify(c,null,"  ")};
FactoryUtils.formatJavaScript_=function(a,b,c){var d=[];d.push("Blockly.Blocks['"+a+"'] = {");d.push("  init: function() {");a={input_value:"appendValueInput",input_statement:"appendStatementInput",input_dummy:"appendDummyInput"};for(var e=b.getInputTargetBlock("INPUTS");e;){if(!e.disabled&&!e.getInheritedDisabled()){var f="";"input_dummy"!=e.type&&(f=JSON.stringify(e.getFieldValue("INPUTNAME")));d.push("    this."+a[e.type]+"("+f+")");(f=FactoryUtils.getOptTypesFrom(e,"TYPE"))&&d.push("        .setCheck("+
f+")");f=e.getFieldValue("ALIGN");"LEFT"!=f&&d.push("        .setAlign(Blockly.ALIGN_"+f+")");f=FactoryUtils.getFieldsJs_(e.getInputTargetBlock("FIELDS"));for(var g=0;g<f.length;g++)d.push("        .appendField("+f[g]+")");d[d.length-1]+=";"}e=e.nextConnection&&e.nextConnection.targetBlock()}"EXT"==b.getFieldValue("INLINE")?d.push("    this.setInputsInline(false);"):"INT"==b.getFieldValue("INLINE")&&d.push("    this.setInputsInline(true);");switch(b.getFieldValue("CONNECTIONS")){case "LEFT":d.push(FactoryUtils.connectionLineJs_("setOutput",
"OUTPUTTYPE",c));break;case "BOTH":d.push(FactoryUtils.connectionLineJs_("setPreviousStatement","TOPTYPE",c));d.push(FactoryUtils.connectionLineJs_("setNextStatement","BOTTOMTYPE",c));break;case "TOP":d.push(FactoryUtils.connectionLineJs_("setPreviousStatement","TOPTYPE",c));break;case "BOTTOM":d.push(FactoryUtils.connectionLineJs_("setNextStatement","BOTTOMTYPE",c))}(c=b.getInputTargetBlock("COLOUR"))&&!c.disabled&&(c=parseInt(c.getFieldValue("HUE"),10),isNaN(c)||d.push("    this.setColour("+c+");"));
c=FactoryUtils.getTooltipFromRootBlock_(b);b=FactoryUtils.getHelpUrlFromRootBlock_(b);d.push(" this.setTooltip("+JSON.stringify(c)+");");d.push(" this.setHelpUrl("+JSON.stringify(b)+");");d.push("  }");d.push("};");return d.join("\n")};FactoryUtils.connectionLineJs_=function(a,b,c){b=FactoryUtils.getOptTypesFrom(FactoryUtils.getRootBlock(c),b);return"    this."+a+"(true"+(b?", "+b:"")+");"};
FactoryUtils.getFieldsJs_=function(a){for(var b=[];a;){if(!a.disabled&&!a.getInheritedDisabled())switch(a.type){case "field_static":b.push(JSON.stringify(a.getFieldValue("TEXT")));break;case "field_label_serializable":b.push("new Blockly.FieldLabelSerializable("+JSON.stringify(a.getFieldValue("TEXT"))+"), "+JSON.stringify(a.getFieldValue("FIELDNAME")));break;case "field_input":b.push("new Blockly.FieldTextInput("+JSON.stringify(a.getFieldValue("TEXT"))+"), "+JSON.stringify(a.getFieldValue("FIELDNAME")));
break;case "field_number":var c=[Number(a.getFieldValue("VALUE")),Number(a.getFieldValue("MIN")),Number(a.getFieldValue("MAX")),Number(a.getFieldValue("PRECISION"))];0==c[3]&&(c.pop(),Infinity==c[2]&&(c.pop(),-Infinity==c[1]&&c.pop()));b.push("new Blockly.FieldNumber("+c.join(", ")+"), "+JSON.stringify(a.getFieldValue("FIELDNAME")));break;case "field_angle":b.push("new Blockly.FieldAngle("+Number(a.getFieldValue("ANGLE"))+"), "+JSON.stringify(a.getFieldValue("FIELDNAME")));break;case "field_checkbox":b.push("new Blockly.FieldCheckbox("+
JSON.stringify(a.getFieldValue("CHECKED"))+"), "+JSON.stringify(a.getFieldValue("FIELDNAME")));break;case "field_colour":b.push("new Blockly.FieldColour("+JSON.stringify(a.getFieldValue("COLOUR"))+"), "+JSON.stringify(a.getFieldValue("FIELDNAME")));break;case "field_variable":c=JSON.stringify(a.getFieldValue("TEXT")||null);b.push("new Blockly.FieldVariable("+c+"), "+JSON.stringify(a.getFieldValue("FIELDNAME")));break;case "field_dropdown":c=[];for(var d=0;d<a.optionList_.length;d++)c[d]=JSON.stringify([a.getUserData(d),
a.getFieldValue("CPU"+d)]);c.length&&b.push("new Blockly.FieldDropdown(["+c.join(", ")+"]), "+JSON.stringify(a.getFieldValue("FIELDNAME")));break;case "field_image":c=JSON.stringify(a.getFieldValue("SRC"));d=Number(a.getFieldValue("WIDTH"));var e=Number(a.getFieldValue("HEIGHT")),f=JSON.stringify(a.getFieldValue("ALT")),g=JSON.stringify(a.getFieldValue("FLIP_RTL"));b.push("new Blockly.FieldImage("+c+", "+d+", "+e+", { alt: "+f+", flipRtl: "+g+" })")}a=a.nextConnection&&a.nextConnection.targetBlock()}return b};
FactoryUtils.getFieldsJson_=function(a){for(var b=[];a;){if(!a.disabled&&!a.getInheritedDisabled())switch(a.type){case "field_static":b.push(a.getFieldValue("TEXT"));break;case "field_label_serializable":b.push({type:a.type,name:a.getFieldValue("FIELDNAME"),text:a.getFieldValue("TEXT")});break;case "field_input":b.push({type:a.type,name:a.getFieldValue("FIELDNAME"),text:a.getFieldValue("TEXT")});break;case "field_number":var c={type:a.type,name:a.getFieldValue("FIELDNAME"),value:Number(a.getFieldValue("VALUE"))},
d=Number(a.getFieldValue("MIN"));-Infinity<d&&(c.min=d);d=Number(a.getFieldValue("MAX"));Infinity>d&&(c.max=d);if(d=Number(a.getFieldValue("PRECISION")))c.precision=d;b.push(c);break;case "field_angle":b.push({type:a.type,name:a.getFieldValue("FIELDNAME"),angle:Number(a.getFieldValue("ANGLE"))});break;case "field_checkbox":b.push({type:a.type,name:a.getFieldValue("FIELDNAME"),checked:"TRUE"==a.getFieldValue("CHECKED")});break;case "field_colour":b.push({type:a.type,name:a.getFieldValue("FIELDNAME"),
colour:a.getFieldValue("COLOUR")});break;case "field_variable":b.push({type:a.type,name:a.getFieldValue("FIELDNAME"),variable:a.getFieldValue("TEXT")||null});break;case "field_dropdown":c=[];for(d=0;d<a.optionList_.length;d++)c[d]=[a.getUserData(d),a.getFieldValue("CPU"+d)];c.length&&b.push({type:a.type,name:a.getFieldValue("FIELDNAME"),options:c});break;case "field_image":b.push({type:a.type,src:a.getFieldValue("SRC"),width:Number(a.getFieldValue("WIDTH")),height:Number(a.getFieldValue("HEIGHT")),
alt:a.getFieldValue("ALT"),flipRtl:"TRUE"==a.getFieldValue("FLIP_RTL")})}a=a.nextConnection&&a.nextConnection.targetBlock()}return b};FactoryUtils.getOptTypesFrom=function(a,b){var c=FactoryUtils.getTypesFrom_(a,b);if(0!=c.length)return-1!=c.indexOf("null")?"null":1==c.length?c[0]:"["+c.join(", ")+"]"};
FactoryUtils.getTypesFrom_=function(a,b){var c=a.getInputTargetBlock(b);if(!c||c.disabled)var d=[];else if("type_other"==c.type)d=[JSON.stringify(c.getFieldValue("TYPE"))];else if("type_group"==c.type){d=[];for(var e=0;e<c.typeCount_;e++)d=d.concat(FactoryUtils.getTypesFrom_(c,"TYPE"+e));c=Object.create(null);for(e=d.length-1;0<=e;e--)c[d[e]]&&d.splice(e,1),c[d[e]]=!0}else d=[JSON.stringify(c.valueType)];return d};
FactoryUtils.getRootBlock=function(a){a=a.getTopBlocks(!1);for(var b=0,c;c=a[b];b++)if("factory_base"==c.type)return c;return null};FactoryUtils.hide=function(a){document.getElementById(a).style.display="none"};FactoryUtils.show=function(a){document.getElementById(a).style.display="block"};FactoryUtils.makeInvisible=function(a){document.getElementById(a).visibility="hidden"};FactoryUtils.makeVisible=function(a){document.getElementById(a).visibility="visible"};
FactoryUtils.createAndDownloadFile=function(a,b,c){a=new Blob([a],{type:"text/"+c});c=new MouseEvent("click",{view:window,bubbles:!0,cancelable:!1});var d=document.createElement("a");d.href=window.URL.createObjectURL(a);d.download=b;d.textContent="Download file!";d.dispatchEvent(c)};FactoryUtils.getDefinedBlock=function(a,b){b.clear();try{return b.newBlock(a)}catch(c){console.log(c)}return null};
FactoryUtils.getBlockTypeFromJsDefinition=function(a){var b=a.indexOf("['"),c=a.indexOf("']");if(-1!=b&&-1!=c)return a.substring(b+2,c);throw Error("Could not parse block type out of JavaScript block definition. Brackets normally enclosing block type not found.");};FactoryUtils.generateCategoryXml=function(a,b){var c=Blockly.utils.xml.createElement("category");c.setAttribute("name",b);for(var d=0,e;e=a[d];d++)e=Blockly.Xml.blockToDom(e),e.removeAttribute("id"),c.appendChild(e);return c};
FactoryUtils.parseJsBlockDefinitions=function(a){for(var b=[],c=a.indexOf("Blockly.Blocks");-1!=a.indexOf("Blockly.Blocks",c);){var d=a.indexOf("Blockly.Blocks",c+1);-1==d&&(d=a.length);c=a.substring(c,d);b.push(c);c=d}return b};FactoryUtils.parseJsonBlockDefinitions=function(a){for(var b=[],c=0,d=0,e=0;e<a.length;e++){var f=a[e];"{"==f?c++:"}"==f&&(c--,0==c&&0<e&&(d=a.substring(d,e+1),b.push(d),d=e+1))}return b};
function appendShadowBlock(a,b,c,d){c=a.workspace.newBlock(c);var e=c.getInput(""),f=e.fieldRow[0];c.setShadow(!0);e.name=b;(d||0==d)&&f.setValue(d);d=c.outputConnection;(a=a.getInput(b).connection)&&a.connect(d);return c}var blockData={};
FactoryUtils.defineAndGetBlockTypes=function(a,b){var c=[];if("JSON"==b)for(var d=JSON.parse(a),e=0,f;f=d[e];e++)c.push(f.type),blockData[f.type]=f,Blockly.Blocks[f.type]={init:function(){var g=blockData[this.type];this.jsonInit(g);if(g.args0)for(var h=0;h<this.inputList.length;h++)for(var k=this.inputList[h],m=0;m<g.args0.length;m++){var l=g.args0[m];l.name===k.name&&(1==l.advanced&&(k.advanced_mode=!0),l.shadow_type&&k.connection&&appendShadowBlock(this,k.name,l.shadow_type,l.value))}}};else if("JavaScript"==
b){d=FactoryUtils.parseJsBlockDefinitions(a);for(e=0;f=d[e];e++)f=FactoryUtils.getBlockTypeFromJsDefinition(f),c.push(f);eval(a)}return c};FactoryUtils.injectCode=function(a,b){var c=document.getElementById(b);c.textContent=a;c.className=c.className.replace("prettyprinted","");PR.prettyPrint()};
FactoryUtils.sameBlockXml=function(a,b){if("xml"!=a.tagName.toLowerCase()||"xml"!=b.tagName.toLowerCase())throw Error("Expected two XML elements, received elements with tag names: "+a.tagName+" and "+b.tagName+".");var c=a.getElementsByTagName("block")[0],d=b.getElementsByTagName("block")[0];if(!c||!d)throw Error("Could not get find block element in XML.");c=FactoryUtils.cleanXml(c);d=FactoryUtils.cleanXml(d);c=Blockly.Xml.domToText(c);d=Blockly.Xml.domToText(d);c=c.replace(/\s+/g,"");d=d.replace(/\s+/g,
"");return c==d};FactoryUtils.cleanXml=function(a){for(var b=a=a.cloneNode(!0);b;){b.removeAttribute&&(b.removeAttribute("xmlns"),b.removeAttribute("x"),b.removeAttribute("y"),b.removeAttribute("id"));var c=b.firstChild||b.nextSibling;if(!c)for(c=b.parentNode;c;){if(c.nextSibling){c=c.nextSibling;break}c=c.parentNode}b=c}return a};FactoryUtils.hasVariableField=function(a){return a?0<a.getVars().length:!1};
FactoryUtils.isProcedureBlock=function(a){return a&&("procedures_defnoreturn"==a.type||"procedures_defreturn"==a.type||"procedures_callnoreturn"==a.type||"procedures_callreturn"==a.type||"procedures_ifreturn"==a.type)};FactoryUtils.savedBlockChanges=function(a){if(BlockFactory.isStarterBlock())return!0;var b=a.getCurrentBlockType(),c=Blockly.Xml.workspaceToDom(BlockFactory.mainWorkspace);return a.has(b)?(a=a.getBlockXml(b),FactoryUtils.sameBlockXml(a,c)):!1};
FactoryUtils.getTooltipFromRootBlock_=function(a){return(a=a.getInputTargetBlock("TOOLTIP"))&&!a.disabled?a.getFieldValue("TEXT"):""};FactoryUtils.getHelpUrlFromRootBlock_=function(a){return(a=a.getInputTargetBlock("HELPURL"))&&!a.disabled?a.getFieldValue("TEXT"):""};